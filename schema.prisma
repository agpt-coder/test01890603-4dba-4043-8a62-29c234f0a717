// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id             String   @id @default(dbgenerated("gen_random_uuid()"))
  email          String   @unique
  hashedPassword String
  role           Role     @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  feedbacks    UserFeedback[]
  apiKeys      ApiKey[]
  usageRecords ApiUsageRecord[]
}

model ApiKey {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  key       String   @unique
  userId    String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model UserFeedback {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  userId    String
  feedback  String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model ApiUsageRecord {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  userId      String
  apiEndpoint String
  accessedAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model QRCodeRequest {
  id            String   @id @default(dbgenerated("gen_random_uuid()"))
  content       String
  encoding      String?
  size          Int?
  styleSettings String?
  createdAt     DateTime @default(now())
}

model CurrencyExchangeRateRequest {
  id             String   @id @default(dbgenerated("gen_random_uuid()"))
  baseCurrency   String
  targetCurrency String
  requestedAt    DateTime @default(now())
}

model IPGeolocationRequest {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  ip          String
  requestedAt DateTime @default(now())
}

model TextToSpeechRequest {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  text        String
  language    String
  requestedAt DateTime @default(now())
}

model BarcodeGenerationRequest {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  content     String
  barcodeType String
  requestedAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
  GUEST
}

